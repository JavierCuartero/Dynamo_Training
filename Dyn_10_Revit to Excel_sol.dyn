{
  "Uuid": "62b86939-375e-4b95-9187-e4394774c69a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Dyn_10_Revit to Excel_sol",
  "ElementResolver": {
    "ResolutionMap": {
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "List.Join": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String.ToNumber": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "List.Map": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List.Rep": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cat = Category.ByName(\"Rooms\");\nElementQueries.OfCategory(cat);",
      "Id": "4f5f30c47cf14f7881f5473a48296017",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bbd418bc621a477183243f4cbff2e990",
          "Name": "",
          "Description": "cat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df0944bed72e4dd1b5eca5dd6e7d4807",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d9c4651167a944e090afe95683ab4c09",
      "Inputs": [
        {
          "Id": "c5e6003f5fcf4d7eb7ebac06a28e027a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25c858ad2098461ab35f861d6112870e",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "0025ba9732fd4f54944fef01d977a384",
      "Inputs": [
        {
          "Id": "f2c56d4182234e86987834a9642b2684",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00720ca29ed441cb94bfa67d0e34b915",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78a6f4374c554425b1ff8ba7c53cf6ac",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f07d02249cde4c2ebf1c2bd8cca7a725",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "340afd5e949a44dbb596a71d74865b25",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4aa55a0408b45b480f38673059a144d",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56fef41d054a49d49300d8eb648eefb8",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f25335da4a3a4eb8b15a2f3e2c9a1697",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "6f9f224f01204cbbacd5e17949bd1ec8",
      "Inputs": [
        {
          "Id": "8a729b6720ed45f7a2b70bfe997f9941",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9678c8f7121241458fba6b97a9b42d78",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "08f6618e31bf43418c68ab2c32dbb69f",
      "Inputs": [
        {
          "Id": "5fa760652f854c60a739ea46c59a4683",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6ffecc9cb954f9893d3ae7f7593f132",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47f30a547acf474ea5b6878a13ab98fe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Name\",\n\"Number\",\n\"Level\",\n\"Unbounded Height\",\n\"Area\",\n\"Ceiling Finish\",\n\"Wall Finish\",\n\"Floor Finish\"];",
      "Id": "ab73b42d4dcd452cb7c3654cbed516bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd40df9b7ab9409ba0ce0f4e259aff91",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa6ca9a3da54421c8e76b49824c0afe9",
      "Inputs": [
        {
          "Id": "9464829016414156ae15e7a4e911fb84",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91015452a79f4b5eb29b31dfdd2b2ead",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bae34cce3f024a3a95694942eab4a70d",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ae0249df912243639e9d7c6ef0d2331e",
      "Inputs": [
        {
          "Id": "03e430e4d26d43349ed27c2e0b931c64",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "351eaed4dac6417fa47dc8846b888efb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "667981e05b50458b84707f43c6c7879c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daedf441a60a48628b7b8521fe5ba55f",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either the True or False input depending on what boolean value is toggled in the test input."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "337f8b58310d45a0913e4df28e915a33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8dcdb2f4ab3a4c6dbcbb08204f11303a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "4d80950deae44f6e818e5e7a817990f4",
      "Inputs": [
        {
          "Id": "50564b60608349f5bdae7c7e051261f9",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "760d812d0a1c47969015f19de557bae0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31e2edd1be764b59b04941c20da3e365",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0ab55804cd5f4515bd4e8a83b7abd260",
      "Inputs": [
        {
          "Id": "c2699cb3cc1f4201b05cb803d98784ec",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2819853be9924db9a8824a10166bae0d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "c6b72fc202df40e7a5586c21d02eb717",
      "Inputs": [
        {
          "Id": "be8d7a85207244898062b65b15e73394",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37a7d7d67ee8439b899e455299d8c3b4",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b667af5b96394ec8b4feb58b5fab4d89",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "ID",
      "Id": "c847e759607d46a9813261939d71745c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2854f991547c41ecb648958e559b72b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "7c6ec32ddb324d058aa8373c927df320",
      "Inputs": [
        {
          "Id": "3bcff8761b6a421aa577cdc848d647e5",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80cae1b14df0416789212fd45311c42d",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3e2592ac85647819d9e1f343d6711fe",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "N:\\02 BIM\\02_training\\03_BIM training\\Dynamo\\aa.xlsx",
      "InputValue": ".\\aa.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "fd19fde774b746f0bda50958ef12c66f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b77d784befc41d698436f430cac7650",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";\n0;\ntrue;\nfalse;",
      "Id": "7d9ae77b5c9d45afaadeb61f671e5bdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1190a90d8e7c498d987564479f2206f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bbe89a5dbda408f95f109d36a50f338",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4ea09b9bcd2404d9263855dfc07052a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "482cda717f8f435da37b002f0151e9c1",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "08026ad802e84d49988cfcff7aa94426",
      "Inputs": [
        {
          "Id": "b9cdab8029794bd4a1465c105a7d4fd1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3319947bb66d4dd38da80cc0ae965e3f",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cat = Category.ByName(\"Rooms\");\nElementQueries.OfCategory(cat);",
      "Id": "0737fd5c32804afe8ec22a56251a693b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21219f53ac9840c6a9734d9ccbb2d535",
          "Name": "",
          "Description": "cat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d9069f2415a4d87bf25cb42fe582b2e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Getting ElementID\nid = e.Id;\n\n// Define which parameters will be used for Data extraction\nparam = [\"ID\",\"Name\",\"Number\",\"Limit Offset\",\"Department\",\n\"Base Finish\",\"Ceiling Finish\",\"Wall Finish\",\"Floor Finish\"];\n\n// Get Parameter Data from elements\nvalues = Element.GetParameterValueByName(e,param<1>);\n\n// Add IDs to the Dataset\nadd_1 = List.AddItemToFront(id,values);\n\n// Add Parameter names (headers) for Excel\nadd_2 = List.AddItemToFront(param, List.Transpose(add_1));",
      "Id": "cd8a951e723f45a09a3f30ba51a89b3d",
      "Inputs": [
        {
          "Id": "75bcbf934d514e7d82483122c5dc568e",
          "Name": "e",
          "Description": "e",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70d2d7ec776e4163a684f5c8d39a8d73",
          "Name": "",
          "Description": "id",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "620fee5ef2ed433b8b25cb434ff4b4e5",
          "Name": "",
          "Description": "param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1aa4cea506af44019d8faacf5c4c02e1",
          "Name": "",
          "Description": "values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfa1c450c24f49af8b6f4f7311d43b31",
          "Name": "",
          "Description": "add_1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ee0bb3ec9bf48fe8125926db04ee2bd",
          "Name": "",
          "Description": "add_2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "$$",
      "Id": "ed7a88451e3e4bec883164cead104ed2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c062d7b7ae2469b94eb168fdd361155",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "db19e68b2fa74235befb27538dd8f212",
      "Inputs": [
        {
          "Id": "0edc62d214e1428f96b37d45fcbc4552",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "212dc3cf02ca43e3b7db1a8caea2fe63",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19bafa8f21ab4053832ad93480ce5dc3",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "41f4f42bcba4420393862386205cc590",
      "Inputs": [
        {
          "Id": "9948a1d2525245a4aa53a42336117d48",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c4857e2ff7479b9511a1599fc0b107",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9cf6407c0d58477086eb4ebedf5efb87",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8af18716951e49dd995d8b7ff298a034",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60ce59718461450aa219ec1c80b7c71c",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4df42c4584049578d70d46afeded156",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5fb19b1b2644f8ca60d3c2cfb942c53",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94aaad7a78844c95bfc076cd56472f95",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";\n0;\ntrue;\nfalse;",
      "Id": "0b943a6916254375b40da77c2cf8eff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d4ff3c88c734bf3878834bd6e27d8cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2760932dd67f4c7088daadf9ebdee2ac",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d493e053a330486f977653f109aa55bc",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "887cb31629654b04ba05ee7ec946c67b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "\\\\kaansrv02\\userhomedata$\\jcuartero\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "InputValue": "..\\..\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "3e86a867d11d47ddb16d8dcd3db2f422",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b22f798feeb456390fa3defe775cf75",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "6169a2c9e09847c494020e39388e59b1",
      "Inputs": [
        {
          "Id": "73e661834b034bba9dcf30b95377ecfb",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d70f56c5510488cb6a024fb457b80a2",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42a5a81de2654c2183cc2d7b7c6bca46",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9b074b56a5244c9a1843982cc76e5a4",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77393b22502f4ccdb7ef12d0031bd9d9",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9974c92f87c42bc975326a8f3da5838",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56ce3bfddd08472ebb9e4088568ae048",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d2d2e0d72a6422fa097338f0e944a81",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "e[0].Parameters;",
      "Id": "6fb28b8e87a64c0ba3a040a058e9f7f9",
      "Inputs": [
        {
          "Id": "30aec66bd1434860a0fcea06acf4113a",
          "Name": "e",
          "Description": "e",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df7c0e998f4a447b8130f80aa782f84b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "698be066904f4df9822486f5c3df089b",
      "Inputs": [
        {
          "Id": "b37d3c2de2c044cc88a5709ebb498f35",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3da9584aaad1423ea1cbfe292e5d91bf",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1227f72f268b456fa194ce7e86f4b28c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "cb3f038a7bab471fb0fd389333e465ab",
      "Inputs": [
        {
          "Id": "7bebff14b3fc476d8a70fccc3c20769a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bde65b56f39414384c59c7843c4193e",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "1a8290efc3f74b4d947e962a3032c9f0",
      "Inputs": [
        {
          "Id": "e16502b76bc945b49efe954e7c84e7b6",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0644644a29144d108dd0b41afbbe6f97",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e05330745c5b45b2a43e812e3db3fbe3",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "25c59f15b85f4fce83ca1f45e49d9fe0",
      "Inputs": [
        {
          "Id": "6f7bb525b81d4d8ab2121c5846a10631",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ce90ed35745471eb39c019ae1dbcde7",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "16c8a6df2dcd4ef9ad2dfcdca7be8e04",
      "Inputs": [
        {
          "Id": "10da3c62e00d4f5393f2f57fe6b3e338",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75ce981d34b342089784ee7b5ca1148e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "39f6aefd74514631b3899fc829aa0f68",
      "Inputs": [
        {
          "Id": "094c12620a744478af93038eb6533770",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02b7c69285194fd088d9f7429d2f1ad1",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "36df67f6b3a041358ef77cdaaf7683ab",
      "Inputs": [
        {
          "Id": "e743fd2e4ec54ff89942b86276e1f19b",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ce5fed19f91473cbaacfc442326ee9e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "bbd418bc621a477183243f4cbff2e990",
      "End": "c5e6003f5fcf4d7eb7ebac06a28e027a",
      "Id": "fc67d059b9604cf2ad3852c2d84b556c"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "8a729b6720ed45f7a2b70bfe997f9941",
      "Id": "c344a24339e74d7983e20b6177f179dd"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "9464829016414156ae15e7a4e911fb84",
      "Id": "9cf1ee824cc84f1298c79f59e829a47c"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "b9cdab8029794bd4a1465c105a7d4fd1",
      "Id": "ebcfc6331dfe46048b8dab8b5df665e6"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "30aec66bd1434860a0fcea06acf4113a",
      "Id": "0238cfdc6fd143d39784af507d6237e0"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "b37d3c2de2c044cc88a5709ebb498f35",
      "Id": "d54a6497596a44ecb75f257956eeceb1"
    },
    {
      "Start": "9678c8f7121241458fba6b97a9b42d78",
      "End": "e743fd2e4ec54ff89942b86276e1f19b",
      "Id": "f5ba86c8577b43049451d6ae6af917ff"
    },
    {
      "Start": "47f30a547acf474ea5b6878a13ab98fe",
      "End": "91015452a79f4b5eb29b31dfdd2b2ead",
      "Id": "c127b94a9886464d858f935c843cdc87"
    },
    {
      "Start": "bd40df9b7ab9409ba0ce0f4e259aff91",
      "End": "b6ffecc9cb954f9893d3ae7f7593f132",
      "Id": "b710e42768584afdbc3ff19a3e56bfa3"
    },
    {
      "Start": "bd40df9b7ab9409ba0ce0f4e259aff91",
      "End": "37a7d7d67ee8439b899e455299d8c3b4",
      "Id": "69bb6219844248f690a866055ced1ddf"
    },
    {
      "Start": "bd40df9b7ab9409ba0ce0f4e259aff91",
      "End": "3da9584aaad1423ea1cbfe292e5d91bf",
      "Id": "8975e0ea987c41c0bee09f026239ffaa"
    },
    {
      "Start": "bae34cce3f024a3a95694942eab4a70d",
      "End": "094c12620a744478af93038eb6533770",
      "Id": "ab3803e99f674dd488c372fb327af2af"
    },
    {
      "Start": "daedf441a60a48628b7b8521fe5ba55f",
      "End": "50564b60608349f5bdae7c7e051261f9",
      "Id": "d0f6528699ab4afc81cbcea7f7b79f9e"
    },
    {
      "Start": "8dcdb2f4ab3a4c6dbcbb08204f11303a",
      "End": "212dc3cf02ca43e3b7db1a8caea2fe63",
      "Id": "9340982936894754bb553f52199a7fea"
    },
    {
      "Start": "31e2edd1be764b59b04941c20da3e365",
      "End": "10da3c62e00d4f5393f2f57fe6b3e338",
      "Id": "23f20df2b14445cc8708bf28954d3ce0"
    },
    {
      "Start": "2819853be9924db9a8824a10166bae0d",
      "End": "760d812d0a1c47969015f19de557bae0",
      "Id": "5eb87eeb8cfc4a4cbee1348726f475ef"
    },
    {
      "Start": "b667af5b96394ec8b4feb58b5fab4d89",
      "End": "3bcff8761b6a421aa577cdc848d647e5",
      "Id": "fd627a7f80774142a0809284303f4773"
    },
    {
      "Start": "b667af5b96394ec8b4feb58b5fab4d89",
      "End": "c2699cb3cc1f4201b05cb803d98784ec",
      "Id": "06d47669cfde4bfc91df2dc074178919"
    },
    {
      "Start": "2854f991547c41ecb648958e559b72b7",
      "End": "be8d7a85207244898062b65b15e73394",
      "Id": "6cfe9c9721d8480d91d411a18fc7076e"
    },
    {
      "Start": "f3e2592ac85647819d9e1f343d6711fe",
      "End": "0edc62d214e1428f96b37d45fcbc4552",
      "Id": "d3c399af8578422bb29dbfc1ee9717e9"
    },
    {
      "Start": "f3e2592ac85647819d9e1f343d6711fe",
      "End": "667981e05b50458b84707f43c6c7879c",
      "Id": "b5049f4a21c245fc9b0af19d348a3daa"
    },
    {
      "Start": "1b77d784befc41d698436f430cac7650",
      "End": "f2c56d4182234e86987834a9642b2684",
      "Id": "45ac7005770442298fda6923a16ebe27"
    },
    {
      "Start": "1190a90d8e7c498d987564479f2206f5",
      "End": "00720ca29ed441cb94bfa67d0e34b915",
      "Id": "75d7ea9561ce4ab996ded84364040212"
    },
    {
      "Start": "0bbe89a5dbda408f95f109d36a50f338",
      "End": "78a6f4374c554425b1ff8ba7c53cf6ac",
      "Id": "54aafa9576b045bb8093c1785baf5a80"
    },
    {
      "Start": "0bbe89a5dbda408f95f109d36a50f338",
      "End": "f07d02249cde4c2ebf1c2bd8cca7a725",
      "Id": "8c3e6385cfd140dd8e911d2f07526289"
    },
    {
      "Start": "a4ea09b9bcd2404d9263855dfc07052a",
      "End": "a4aa55a0408b45b480f38673059a144d",
      "Id": "e2c40d909d6b494b9bec38e20edfa3dc"
    },
    {
      "Start": "a4ea09b9bcd2404d9263855dfc07052a",
      "End": "56fef41d054a49d49300d8eb648eefb8",
      "Id": "a43b379310dc4c0994594e904be8ca8a"
    },
    {
      "Start": "2d9069f2415a4d87bf25cb42fe582b2e",
      "End": "75bcbf934d514e7d82483122c5dc568e",
      "Id": "a94ca0a3bf2e4a10958b8490c17933a8"
    },
    {
      "Start": "0ee0bb3ec9bf48fe8125926db04ee2bd",
      "End": "60ce59718461450aa219ec1c80b7c71c",
      "Id": "380bed6fe4b042279cd078a1ac3d136c"
    },
    {
      "Start": "8c062d7b7ae2469b94eb168fdd361155",
      "End": "351eaed4dac6417fa47dc8846b888efb",
      "Id": "2062f759b4e94be5934f551cdf362250"
    },
    {
      "Start": "19bafa8f21ab4053832ad93480ce5dc3",
      "End": "03e430e4d26d43349ed27c2e0b931c64",
      "Id": "f9e14908aa8c4854b1c514c5b1e7e084"
    },
    {
      "Start": "0d4ff3c88c734bf3878834bd6e27d8cd",
      "End": "74c4857e2ff7479b9511a1599fc0b107",
      "Id": "d978e59ada674260b817a18b6971d738"
    },
    {
      "Start": "2760932dd67f4c7088daadf9ebdee2ac",
      "End": "9cf6407c0d58477086eb4ebedf5efb87",
      "Id": "ca6ee4ae591f4b9f84b9e9b824075de2"
    },
    {
      "Start": "2760932dd67f4c7088daadf9ebdee2ac",
      "End": "8af18716951e49dd995d8b7ff298a034",
      "Id": "d7973f79dc4a4618b48a2619194f24f6"
    },
    {
      "Start": "d493e053a330486f977653f109aa55bc",
      "End": "e4df42c4584049578d70d46afeded156",
      "Id": "2ca921ef19e14c2e979648ddf0fbab0c"
    },
    {
      "Start": "d493e053a330486f977653f109aa55bc",
      "End": "c5fb19b1b2644f8ca60d3c2cfb942c53",
      "Id": "ed9b048022064e7f9de9831f1d92164c"
    },
    {
      "Start": "2b22f798feeb456390fa3defe775cf75",
      "End": "9948a1d2525245a4aa53a42336117d48",
      "Id": "7c7ecab47fa8496499b0de92ed47014d"
    },
    {
      "Start": "6bde65b56f39414384c59c7843c4193e",
      "End": "0644644a29144d108dd0b41afbbe6f97",
      "Id": "223b89869ae2421bb1f13fcb9bcdf281"
    },
    {
      "Start": "e05330745c5b45b2a43e812e3db3fbe3",
      "End": "6f7bb525b81d4d8ab2121c5846a10631",
      "Id": "702c31bb0bee465e8f5a7ab25de6eba0"
    },
    {
      "Start": "0ce90ed35745471eb39c019ae1dbcde7",
      "End": "80cae1b14df0416789212fd45311c42d",
      "Id": "dea025bc9cf1463c8900c6cba26ee42d"
    },
    {
      "Start": "75ce981d34b342089784ee7b5ca1148e",
      "End": "340afd5e949a44dbb596a71d74865b25",
      "Id": "d076cffd77c0432b95afa2cb0c5f7f75"
    },
    {
      "Start": "02b7c69285194fd088d9f7429d2f1ad1",
      "End": "7bebff14b3fc476d8a70fccc3c20769a",
      "Id": "b7802208f0794b68aa7d5048cebdd501"
    },
    {
      "Start": "3ce5fed19f91473cbaacfc442326ee9e",
      "End": "e16502b76bc945b49efe954e7c84e7b6",
      "Id": "5eefcd8145c24e14ae20ba4a333fc8fd"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4f5f30c47cf14f7881f5473a48296017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11.769181327862128,
        "Y": 319.221540411729
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "d9c4651167a944e090afe95683ab4c09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 427.70529504987462,
        "Y": 312.94912347125376
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportToExcel",
        "Id": "0025ba9732fd4f54944fef01d977a384",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 4718.0373738342469,
        "Y": 768.08023647765094
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "6f9f224f01204cbbacd5e17949bd1ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1038.3680544055399,
        "Y": 847.47193687939182
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "08f6618e31bf43418c68ab2c32dbb69f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 796.18859824059211,
        "Y": 1219.8661202133671
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ab73b42d4dcd452cb7c3654cbed516bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 548.26281438102808,
        "Y": 1325.4420154630632
      },
      {
        "ShowGeometry": true,
        "Name": "List.Map",
        "Id": "aa6ca9a3da54421c8e76b49824c0afe9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1089.6895653059457,
        "Y": 1194.4464333418912
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "ae0249df912243639e9d7c6ef0d2331e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3238.4898328044846,
        "Y": 836.9386890658991
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "337f8b58310d45a0913e4df28e915a33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2833.0280851941566,
        "Y": 1006.2573272581691
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "4d80950deae44f6e818e5e7a817990f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3714.6763658156219,
        "Y": 840.59318408976264
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0ab55804cd5f4515bd4e8a83b7abd260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3530.4014874937625,
        "Y": 966.21440118493274
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "c6b72fc202df40e7a5586c21d02eb717",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2342.9522466310846,
        "Y": 945.2109180656787
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c847e759607d46a9813261939d71745c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2243.4892452119429,
        "Y": 942.52169574200275
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "7c6ec32ddb324d058aa8373c927df320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2544.5138396569669,
        "Y": 837.3522080721857
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "fd19fde774b746f0bda50958ef12c66f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4348.6653540344214,
        "Y": 767.4916999906435
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7d9ae77b5c9d45afaadeb61f671e5bdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4495.7279301103981,
        "Y": 807.8732192916541
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "08026ad802e84d49988cfcff7aa94426",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 729.78080949191815,
        "Y": 131.26632325607952
      },
      {
        "ShowGeometry": true,
        "Name": "Get all elements",
        "Id": "0737fd5c32804afe8ec22a56251a693b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 570.5539321644535,
        "Y": 2027.0924246011441
      },
      {
        "ShowGeometry": true,
        "Name": "Get Parameter Values ",
        "Id": "cd8a951e723f45a09a3f30ba51a89b3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 910.56017053046935,
        "Y": 2046.8023238611581
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ed7a88451e3e4bec883164cead104ed2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3094.0620096286489,
        "Y": 1022.7563005528351
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "db19e68b2fa74235befb27538dd8f212",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2953.1134674731611,
        "Y": 837.34847897439556
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportToExcel",
        "Id": "41f4f42bcba4420393862386205cc590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1835.7201700161222,
        "Y": 1848.7694525030215
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0b943a6916254375b40da77c2cf8eff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1615.580964608675,
        "Y": 1940.1216008377044
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "3e86a867d11d47ddb16d8dcd3db2f422",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1450.9941140268597,
        "Y": 1854.6281453061115
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportToExcel",
        "Id": "6169a2c9e09847c494020e39388e59b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17.427694799257381,
        "Y": 554.70546669707039
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6fb28b8e87a64c0ba3a040a058e9f7f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 736.35762390772481,
        "Y": 237.78177117968775
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetParameterValueByName",
        "Id": "698be066904f4df9822486f5c3df089b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 960.06279477947385,
        "Y": 991.393536579298
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "cb3f038a7bab471fb0fd389333e465ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1576.6341094411193,
        "Y": 918.06468765605553
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "1a8290efc3f74b4d947e962a3032c9f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1813.6211423909367,
        "Y": 850.95454967886747
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "25c59f15b85f4fce83ca1f45e49d9fe0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2031.5470522158284,
        "Y": 852.61959480662654
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "16c8a6df2dcd4ef9ad2dfcdca7be8e04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3984.9246957153473,
        "Y": 839.44264960403893
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "39f6aefd74514631b3899fc829aa0f68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1276.7429992986877,
        "Y": 1192.8768112986586
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "36df67f6b3a041358ef77cdaaf7683ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1285.5748418465698,
        "Y": 847.30926038766086
      }
    ],
    "Annotations": [
      {
        "Id": "3b874afecbc245a1b274b578fe241198",
        "Title": "CodeBlocks",
        "Nodes": [
          "0737fd5c32804afe8ec22a56251a693b",
          "cd8a951e723f45a09a3f30ba51a89b3d",
          "41f4f42bcba4420393862386205cc590",
          "0b943a6916254375b40da77c2cf8eff2",
          "3e86a867d11d47ddb16d8dcd3db2f422"
        ],
        "Left": 560.5539321644535,
        "Top": 1795.7694525030215,
        "Width": 1506.1662378516687,
        "Height": 581.03287135813662,
        "FontSize": 36.0,
        "InitialTop": 1848.7694525030215,
        "InitialHeight": 343.03287135813662,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5746b7b0b97244908854a390d927cae1",
        "Title": "",
        "Nodes": [
          "3d19b094f9034dd780daa7eb8bbab78c"
        ],
        "Left": -1333.5453378228458,
        "Top": 638.227623671502,
        "Width": 318.0,
        "Height": 137.0,
        "FontSize": 14.0,
        "InitialTop": 668.227623671502,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "a19eb8a8428b4012a8b3b6c12946cf2e",
        "Title": "",
        "Nodes": [
          "3c726ba11e3b484ca3a12439ac7aa0d6"
        ],
        "Left": -1336.4609582943449,
        "Top": 489.12549231721823,
        "Width": 314.0,
        "Height": 137.0,
        "FontSize": 14.0,
        "InitialTop": 519.12549231721823,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "468058e784624d7bbbad65d5f11919fe",
        "Title": "",
        "Nodes": [
          "6926c18ef03b4e0d9efe4364779ce8fa"
        ],
        "Left": -1335.1337383872801,
        "Top": 334.25422999022612,
        "Width": 314.0,
        "Height": 151.0,
        "FontSize": 14.0,
        "InitialTop": 364.25422999022612,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8d6c10ba9f904b889e226035e3ea7c15",
        "Title": "",
        "Nodes": [
          "83586545b6a94de9b3a346141d676986"
        ],
        "Left": -1332.6223583092856,
        "Top": 175.38976554860665,
        "Width": 314.0,
        "Height": 151.0,
        "FontSize": 14.0,
        "InitialTop": 205.38976554860665,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ccf7fc51a4e94355929a1437b24941c9",
        "Title": "",
        "Nodes": [
          "d6b5eebbfd604258bc566972d6f8da1d"
        ],
        "Left": -201.37424574173826,
        "Top": 255.10557095721714,
        "Width": 165.0,
        "Height": 79.0,
        "FontSize": 14.0,
        "InitialTop": 285.10557095721714,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "da8d671a1c1c4f629be5ddb500502129",
        "Title": "Get Model Rooms",
        "Nodes": [
          "4f5f30c47cf14f7881f5473a48296017",
          "d9c4651167a944e090afe95683ab4c09"
        ],
        "Left": 1.7691813278621282,
        "Top": 259.94912347125376,
        "Width": 609.93611372201246,
        "Height": 162.27241694047524,
        "FontSize": 36.0,
        "InitialTop": 312.94912347125376,
        "InitialHeight": 151.27241694047524,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "48e8644f82ed4b619a7e2cd53877937f",
        "Title": "Checking",
        "Nodes": [
          "6169a2c9e09847c494020e39388e59b1"
        ],
        "Left": 7.427694799257381,
        "Top": 501.70546669707039,
        "Width": 241.0,
        "Height": 302.0,
        "FontSize": 36.0,
        "InitialTop": 554.70546669707039,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3f2b4d37f7b4419e9c1abe162bdaa288",
        "Title": "",
        "Nodes": [
          "2603e506490f4a3e9e7781df3f74ed17"
        ],
        "Left": -236.66883929086418,
        "Top": 488.16337457550196,
        "Width": 207.0,
        "Height": 79.0,
        "FontSize": 14.0,
        "InitialTop": 518.163374575502,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "c0af74fbbb514dc094fb38619f7098dc",
        "Title": "Check Available Room parameters",
        "Nodes": [
          "08026ad802e84d49988cfcff7aa94426",
          "6fb28b8e87a64c0ba3a040a058e9f7f9"
        ],
        "Left": 719.78080949191815,
        "Top": -8.7336767439204834,
        "Width": 262.0,
        "Height": 339.51544792360824,
        "FontSize": 36.0,
        "InitialTop": 131.26632325607952,
        "InitialHeight": 251.51544792360826,
        "TextblockHeight": 130.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "75e78e0de69340c092162c32bc5e7312",
        "Title": "Get Required Room Parameters",
        "Nodes": [
          "08f6618e31bf43418c68ab2c32dbb69f",
          "ab73b42d4dcd452cb7c3654cbed516bf",
          "aa6ca9a3da54421c8e76b49824c0afe9",
          "6f9f224f01204cbbacd5e17949bd1ec8",
          "698be066904f4df9822486f5c3df089b"
        ],
        "Left": 538.26281438102808,
        "Top": 794.47193687939182,
        "Width": 695.10524002451177,
        "Height": 738.97007858367135,
        "FontSize": 36.0,
        "InitialTop": 847.47193687939182,
        "InitialHeight": 622.97007858367135,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "51e12df8535f4839b38d935503d5d4d0",
        "Title": "",
        "Nodes": [
          "d25f26b8e2b34f9d909323e4535fbb0c"
        ],
        "Left": 349.20557997183664,
        "Top": 805.08024680552251,
        "Width": 181.0,
        "Height": 79.0,
        "FontSize": 14.0,
        "InitialTop": 835.08024680552251,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "7251fb9f78d745379d2db27dd2a06b93",
        "Title": "Replace empty values",
        "Nodes": [
          "ae0249df912243639e9d7c6ef0d2331e",
          "337f8b58310d45a0913e4df28e915a33",
          "ed7a88451e3e4bec883164cead104ed2",
          "db19e68b2fa74235befb27538dd8f212"
        ],
        "Left": 2823.0280851941566,
        "Top": 783.9386890658991,
        "Width": 607.46174761032808,
        "Height": 315.31863819226987,
        "FontSize": 36.0,
        "InitialTop": 836.9386890658991,
        "InitialHeight": 330.8176114869359,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "18ba3b1e52bf4fa4a6e8201e3fc50357",
        "Title": "Divide into sublists",
        "Nodes": [
          "4d80950deae44f6e818e5e7a817990f4",
          "0ab55804cd5f4515bd4e8a83b7abd260"
        ],
        "Left": 3520.4014874937625,
        "Top": 787.59318408976264,
        "Width": 391.27487832185943,
        "Height": 271.6212170951701,
        "FontSize": 36.0,
        "InitialTop": 840.59318408976264,
        "InitialHeight": 270.6212170951701,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "913e62e1e519414aa71b321746bc86bd",
        "Title": "Adding Headers column befre",
        "Nodes": [
          "c6b72fc202df40e7a5586c21d02eb717",
          "c847e759607d46a9813261939d71745c",
          "7c6ec32ddb324d058aa8373c927df320"
        ],
        "Left": 2233.4892452119429,
        "Top": 784.3522080721857,
        "Width": 484.02459444502392,
        "Height": 279.858709993493,
        "FontSize": 36.0,
        "InitialTop": 837.3522080721857,
        "InitialHeight": 252.858709993493,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "9ee01ef8a7ad407580540f062da05f44",
        "Title": "Export To Excel",
        "Nodes": [
          "0025ba9732fd4f54944fef01d977a384",
          "fd19fde774b746f0bda50958ef12c66f",
          "7d9ae77b5c9d45afaadeb61f671e5bdc"
        ],
        "Left": 4338.6653540344214,
        "Top": 714.4916999906435,
        "Width": 610.37201979982547,
        "Height": 302.58853648700745,
        "FontSize": 36.0,
        "InitialTop": 767.4916999906435,
        "InitialHeight": 185.3815193010106,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "4ad00e560a994736b0b9bb7295ccce5a",
        "Title": "Check data",
        "Nodes": [
          "16c8a6df2dcd4ef9ad2dfcdca7be8e04"
        ],
        "Left": 3974.9246957153473,
        "Top": 786.44264960403893,
        "Width": 230.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 839.44264960403893,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "8c096169e860456694148236bc149e56",
        "Title": "Check data",
        "Nodes": [
          "39f6aefd74514631b3899fc829aa0f68",
          "36df67f6b3a041358ef77cdaaf7683ab"
        ],
        "Left": 1266.7429992986877,
        "Top": 794.30926038766086,
        "Width": 238.83184254788216,
        "Height": 676.56755091099774,
        "FontSize": 36.0,
        "InitialTop": 847.30926038766086,
        "InitialHeight": 490.56755091099774,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "bac75472204d487e961659a3add27459",
        "Title": "Transpose data to add ID at front",
        "Nodes": [
          "cb3f038a7bab471fb0fd389333e465ab",
          "1a8290efc3f74b4d947e962a3032c9f0",
          "25c59f15b85f4fce83ca1f45e49d9fe0"
        ],
        "Left": 1566.6341094411193,
        "Top": 797.95454967886747,
        "Width": 641.91294277470911,
        "Height": 213.11013797718806,
        "FontSize": 36.0,
        "InitialTop": 850.95454967886747,
        "InitialHeight": 212.11013797718806,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "d56f7edd22d64bb8a222079465d43ab2",
        "Title": "Revit file!",
        "Nodes": [
          "e7e90ede4feb4a058852b139577e7a63"
        ],
        "Left": -965.46543986383892,
        "Top": 588.23481464468989,
        "Width": 311.0,
        "Height": 146.0,
        "FontSize": 36.0,
        "InitialTop": 641.23481464468989,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "98829b7fed7f49a8a6fd30ae5e6d2bcf",
        "Title": "Dyn_10_Revit to Excel",
        "Nodes": [
          "800993aea34b4a4d8bb3b7c0c08ab76c",
          "24e6cffce1fd4add90ddfec6ec89d481"
        ],
        "Left": -988.74119354375716,
        "Top": 184.98390859577023,
        "Width": 628.19679917274073,
        "Height": 363.66037514783125,
        "FontSize": 60.0,
        "InitialTop": 266.98390859577023,
        "InitialHeight": 145.0,
        "TextblockHeight": 72.0,
        "Background": "#FFFFFFFF"
      },
      {
        "Id": "3d19b094f9034dd780daa7eb8bbab78c",
        "Title": "Important stuff\r\n_______________________________________________________\r\n\r\nPurple will indicate something important is going on here.",
        "Nodes": [],
        "Left": -1323.5453378228458,
        "Top": 668.227623671502,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3c726ba11e3b484ca3a12439ac7aa0d6",
        "Title": "Checking / Outputs\r\n_______________________________________________________\r\n\r\nOrange indicates checking nodes to ensure the script has deployed correctly.",
        "Nodes": [],
        "Left": -1326.4609582943449,
        "Top": 519.12549231721823,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6926c18ef03b4e0d9efe4364779ce8fa",
        "Title": "Working / Functions\r\n_______________________________________________________\r\n\r\nGreen indicates the working of the script. No changes should be made in these groups unless advised.",
        "Nodes": [],
        "Left": -1325.1337383872801,
        "Top": 364.25422999022612,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "83586545b6a94de9b3a346141d676986",
        "Title": "Variables / Inputs\r\n_______________________________________________________\r\n\r\nRed indicates Variables that can be altered per project and must be set accordingly before running the script.",
        "Nodes": [],
        "Left": -1322.6223583092856,
        "Top": 205.38976554860665,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d6b5eebbfd604258bc566972d6f8da1d",
        "Title": "1. Collect model Rooms",
        "Nodes": [],
        "Left": -191.37424574173826,
        "Top": 285.10557095721714,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2603e506490f4a3e9e7781df3f74ed17",
        "Title": "2. Checking ExportToExcel node",
        "Nodes": [],
        "Left": -226.66883929086418,
        "Top": 518.163374575502,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d25f26b8e2b34f9d909323e4535fbb0c",
        "Title": "3. Get Multiple parameters",
        "Nodes": [],
        "Left": 359.20557997183664,
        "Top": 835.08024680552251,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e7e90ede4feb4a058852b139577e7a63",
        "Title": "Use this file in combination with the following Revit file:\r\n\r\nDyn_04_07_10_11_Training file.rvt",
        "Nodes": [],
        "Left": -955.46543986383892,
        "Top": 641.23481464468989,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "800993aea34b4a4d8bb3b7c0c08ab76c",
        "Title": "Workflow\r\n_______________________________________________________\r\n\r\n1. Collect all Rooms in the model \r\n2. Analyze Data.ExportToExcel node\r\n3. Get all Room desired Data as a list:\r\n\t• Check available Room parameters (Element.Parameters)\r\n4. Element.GetParameterValueByName (use Map or Cross product)\r\n5. List data manipuliation (Transpose, AddItem,...)\r\n6. Clean Empty Values Replace them with a @ value:\r\n\t• If Statement\r\n7. List.Chop\r\n8. Add headers column (parameter name)\r\n9. Export!\r\n10. Try with Code Block? :) ",
        "Nodes": [],
        "Left": -664.54439437101644,
        "Top": 268.64428374360148,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "24e6cffce1fd4add90ddfec6ec89d481",
        "Title": "Exercise & Hints\r\n_______________________________________________________\r\n\r\nCollect and export the following room data to excel\r\n\tRoom ID\r\n\tRoom Name\r\n\tRoom Number\r\n\tLevel\r\n\tRoom Height (Unbounded Height)\r\n\tArea\r\n\tFloor Finish\r\n\tCeiling Finish\r\n\tWall Finish",
        "Nodes": [],
        "Left": -978.74119354375716,
        "Top": 266.98390859577023,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1526.7607954274395,
    "Y": -72.886074316727218,
    "Zoom": 1.0237970965973626
  }
}